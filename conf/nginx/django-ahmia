upstream django {
    # fail_timeout=0 means we always retry an upstream even if it failed to return a good HTTP response
    # UNIX domain socket
    server unix:/tmp/ahmia.sock fail_timeout=0;
}

upstream django-onion {
    # fail_timeout=0 means we always retry an upstream even if it failed to return a good HTTP response
    # UNIX domain socket
    server unix:/tmp/msydqstlz2kzerdg.sock fail_timeout=0;
}

server {
    listen 80;
    return 301 https://$host$request_uri;
}

server {
    server_name "~^www\.(.*)$";
    return 301 $scheme://$1$request_uri;
}

# Sets the path and other parameters of a cache.
# Max size is 1 GigaByte.
# The term "inactive" describes how long a website is cached without being viewed.
# The page is constructed again once the time restriction has been reached.
# Reduce content caching to 600 minutes to accelerate the removal of filtered content.
proxy_cache_path /var/cache/nginx/ levels=1:2 keys_zone=my_cache:10m max_size=1g inactive=600m;

server {
    listen 443 ssl;
    server_name ahmia.fi;

    charset     utf-8;
    client_max_body_size 75M;   # adjust to taste

    ssl_trusted_certificate /etc/letsencrypt/live/ahmia.fi/chain.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_certificate_key /etc/letsencrypt/live/ahmia.fi/privkey.pem;
    ssl_certificate /etc/letsencrypt/live/ahmia.fi/fullchain.pem;

    add_header Strict-Transport-Security "max-age=63072000; includeSubdomains";
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header Onion-Location http://juhanurmihxlp77nkq76byazcldy2hlmovfu2epvl5ankdibsot4csyd.onion$request_uri;

    access_log  /usr/local/lib/search/error/access.log no_ip;
    error_log  /usr/local/lib/search/error/error.log;

    location /static/ {
        alias /usr/local/lib/ahmia-site/ahmia/staticfiles/;
        # Try to serve the file, if not found, return 404
        try_files $uri $uri/ =404;
    }

    # Django WSGI Server
    location / {
        proxy_read_timeout 300;
        proxy_connect_timeout 300;

        proxy_pass http://django;    # defined at the beginning
        include proxy_params;        # should be /etc/nginx/proxy_param

        ################## CACHE SETTINGS ##################
	      proxy_cache my_cache;

        # Sets the number of requests after which the response will be cached.
        proxy_cache_min_uses 1;

        # Cache GET and HEAD methods
        proxy_cache_methods GET HEAD;

        # Sets caching time for different response codes.
        proxy_cache_valid 200 301 302 60m;
        proxy_cache_valid 404 500 10m;
        proxy_cache_valid any 10m;
    }

    # Bypass cache for /add/ URLs
    location ~* ^/add/ {
        proxy_read_timeout 300;
        proxy_connect_timeout 300;
        proxy_pass http://django;
        include proxy_params;

        # Bypass cache based on request URI
        proxy_no_cache 1;
        proxy_cache_bypass 1;
    }
}

server {
    listen      127.0.0.1:56789;
    server_name .msydqstlz2kzerdg.onion;
    return 301 http://juhanurmihxlp77nkq76byazcldy2hlmovfu2epvl5ankdibsot4csyd.onion$request_uri;
}

server {
    listen      127.0.0.1:56790;
    server_name juhanurmihxlp77nkq76byazcldy2hlmovfu2epvl5ankdibsot4csyd.onion;

    charset     utf-8;
    client_max_body_size 75M;   # adjust to taste

    access_log  /usr/local/lib/search/error/hs_access.log no_ip;
    error_log  /usr/local/lib/search/error/hs_error.log;

    location /static/ {
        alias /usr/local/lib/ahmia-site/ahmia/staticfiles/;
        # Try to serve the file, if not found, return 404
        try_files $uri $uri/ =404;
    }

    # Django WSGI Server
    location / {
        proxy_read_timeout 300;
        proxy_connect_timeout 300;

        proxy_pass http://django-onion;    # defined at the beginning
        include proxy_params;        # should be in /etc/nginx/proxy_params

        ################## CACHE SETTINGS ##################
	      proxy_cache my_cache;

        # Sets the number of requests after which the response will be cached.
        proxy_cache_min_uses 1;

        # Cache GET and HEAD methods
        proxy_cache_methods GET HEAD;

        # Sets caching time for different response codes.
        proxy_cache_valid 200 301 302 60m;
        proxy_cache_valid 404 500 10m;
        proxy_cache_valid any 10m;
    }

    # Bypass cache for /add/ URLs
    location ~* ^/add/ {
        proxy_read_timeout 300;
        proxy_connect_timeout 300;
        proxy_pass http://django-onion;
        include proxy_params;

        # Bypass cache based on request URI
        proxy_no_cache 1;
        proxy_cache_bypass 1;
    }
}
